Bridge mqtt:broker:mosquitto "Mosquitto" [ host="localhost", port=1883, secure=false, clientID="openHAB2", quos=1]
{
    // Sonoffs
    Thing topic sonoff_basic_01 "Sonoff Basic 01" @ "debug" {
    Channels:
        Type string : reachable "Reachable"            [ stateTopic="tele/sonoff_basic_01/LWT" ]
        Type switch : power     "Power"                [ stateTopic="stat/sonoff_basic_01/POWER", commandTopic="cmnd/sonoff_basic_01/POWER", retained=true]
        Type number : rssi      "WiFi Signal Strength" [ stateTopic="tele/sonoff_basic_01/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
    }

    Thing topic sonoff_basic_02 "Sonoff Basic 02" @ "debug" {
    Channels:
        Type string : reachable "Reachable"            [ stateTopic="tele/sonoff_basic_02/LWT" ]
        Type switch : power     "Power"                [ stateTopic="stat/sonoff_basic_02/POWER", commandTopic="cmnd/sonoff_basic_02/POWER", retained=true]
        Type number : rssi      "WiFi Signal Strength" [ stateTopic="tele/sonoff_basic_02/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
    }

    Thing topic sonoff_basic_03 "Sonoff Basic 03" @ "debug" {
    Channels:
        Type string : reachable "Reachable"            [ stateTopic="tele/sonoff_basic_03/LWT" ]
        Type switch : power     "Power"                [ stateTopic="stat/sonoff_basic_03/POWER", commandTopic="cmnd/sonoff_basic_03/POWER", retained=true]
        Type number : rssi      "WiFi Signal Strength" [ stateTopic="tele/sonoff_basic_03/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
    }

    Thing topic sonoff_basic_04 "Sonoff Basic 04" @ "debug" {
    Channels:
        Type string : reachable "Reachable"            [ stateTopic="tele/sonoff_basic_04/LWT" ]
        Type switch : power     "Power"                [ stateTopic="stat/sonoff_basic_04/POWER", commandTopic="cmnd/sonoff_basic_04/POWER", retained=true]
        Type number : rssi      "WiFi Signal Strength" [ stateTopic="tele/sonoff_basic_04/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
    }

    Thing topic sonoff_basic_05 "Sonoff Basic 05" @ "debug" {
    Channels:
        Type string : reachable "Reachable"            [ stateTopic="tele/sonoff_basic_05/LWT" ]
        Type switch : power     "Power"                [ stateTopic="stat/sonoff_basic_05/POWER", commandTopic="cmnd/sonoff_basic_05/POWER", retained=true]
        Type number : rssi      "WiFi Signal Strength" [ stateTopic="tele/sonoff_basic_05/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
    }    

    Thing topic sonoff_pro_01 "Sonoff Pro 01" @ "debug" {
    Channels:
        Type string : reachable "Reachable"            [ stateTopic="tele/sonoff_pro_01/LWT" ]
        Type switch : power1    "Power1"               [ stateTopic="stat/sonoff_pro_01/POWER1", commandTopic="cmnd/sonoff_pro_01/POWER1", retained=true]
        Type switch : power2    "Power2"               [ stateTopic="stat/sonoff_pro_01/POWER2", commandTopic="cmnd/sonoff_pro_01/POWER2", retained=true]
        Type switch : power3    "Power3"               [ stateTopic="stat/sonoff_pro_01/POWER3", commandTopic="cmnd/sonoff_pro_01/POWER3", retained=true]
        Type switch : power4    "Power4"               [ stateTopic="stat/sonoff_pro_01/POWER4", commandTopic="cmnd/sonoff_pro_01/POWER4", retained=true]
        Type number : rssi      "WiFi Signal Strength" [ stateTopic="tele/sonoff_pro_01/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
    }
    
    //power node
    Thing topic power_control "Power Control" @ "debug" {
    Channels:
        Type number : grid_power            "grid_power"            [ stateTopic="power_state/grid_power"]           
        Type number : solar_power           "solar_power"           [ stateTopic="power_state/solar_power"]          
        Type number : battery_power         "battery_power"         [ stateTopic="power_state/battery_power"]        
        Type number : loads_power           "loads_power"           [ stateTopic="power_state/loads_power"]          
        Type number : criticial_loads_power "criticial_loads_power" [ stateTopic="power_state/criticial_loads_power"]
        Type number : charger_power         "charger_power"         [ stateTopic="power_state/charger_power"]        
        Type number : charger_setpoint      "charger_setpoint"      [ stateTopic="power_state/charger_setpoint", commandTopic="power_command/charger_setpoint"]          
        Type number : victron_connected     "victron_connected"     [ stateTopic="power_state/victron_connected"]    
        Type number : victron_status        "victron_status"        [ stateTopic="power_state/victron_status"]       
        Type number : state_of_charge       "state_of_charge"       [ stateTopic="power_state/state_of_charge"]    
        Type number : charger_connected     "charger_connected"     [ stateTopic="power_state/charger_connected"]    
        Type number : charger_status        "charger_status"        [ stateTopic="power_state/charger_status"]       
        Type switch : solar2heat            "solar2heat"            [ stateTopic="power_state/solar2heat",       commandTopic="power_command/solar2heat"]      
        Type switch : solar2car             "solar2car"             [ stateTopic="power_state/solar2car",        commandTopic="power_command/solar2car"]
        Type number : U_EL                  "U_EL"                  [ stateTopic="ard_state/U_EL",               commandTopic="ard_command/U_EL"]
        Type number : TI_PU_O               "TI_PU_O"               [ stateTopic="ard_state/TI_PU_U"]       
        Type number : TI_PU_U               "TI_PU_O"               [ stateTopic="ard_state/TI_PU_O"]        
    }

    Thing topic arduino_nodes "Arduino Nodes" @ "debug" {
    Channels:
        Type number        : U_EL           "U_EL"                            [ stateTopic="ard_state/U_EL",          commandTopic="ard_command/U_EL"]
        Type number        : TI_PU_O        "TI_PU_O"                         [ stateTopic="ard_state/TI_PU_U"]       
        Type number        : TI_PU_U        "TI_PU_O"                         [ stateTopic="ard_state/TI_PU_O"]  
        
        Type switch        : LI_OG_KN 	    "LI_OG_KN" 	                      [ stateTopic="ard_state/LI_OG_KN", 	  commandTopic="ard_command/LI_OG_KN"] 	
        Type switch        : LI_OG_KN_L1 	"LI_OG_KN_L1" 	                  [ stateTopic="ard_state/LI_OG_KN_L1",   commandTopic="ard_command/LI_OG_KN_L1"] 
        Type switch        : LI_OG_KS 	    "LI_OG_KS" 	                      [ stateTopic="ard_state/LI_OG_KS", 	  commandTopic="ard_command/LI_OG_KS"] 	
        Type switch        : LI_OG_KS_L1 	"LI_OG_KS_L1" 	                  [ stateTopic="ard_state/LI_OG_KS_L1",   commandTopic="ard_command/LI_OG_KS_L1"] 
        Type switch        : LI_OG_GA 	    "LI_OG_GA" 	                      [ stateTopic="ard_state/LI_OG_GA", 	  commandTopic="ard_command/LI_OG_GA"] 	
        Type switch        : LI_OG_GA_L1  	"LI_OG_GA_L1"                     [ stateTopic="ard_state/LI_OG_GA_L1",   commandTopic="ard_command/LI_OG_GA_L1"] 
        Type rollershutter : RO_OG_KN 	    "RO_OG_KN" 	                      [ stateTopic="ard_state/RO_OG_KN", 	  commandTopic="ard_command/RO_OG_KN"] 	
        Type rollershutter : VD_OG_KN	    "VD_OG_KN"	                      [ stateTopic="ard_state/VD_OG_KN",	  commandTopic="ard_command/VD_OG_KN"]	
        Type rollershutter : DF_OG_KN	    "DF_OG_KN"	                      [ stateTopic="ard_state/DF_OG_KN",	  commandTopic="ard_command/DF_OG_KN"]	
        Type rollershutter : RO_OG_KS 	    "RO_OG_KS" 	                      [ stateTopic="ard_state/RO_OG_KS", 	  commandTopic="ard_command/RO_OG_KS"] 	
        Type rollershutter : VD_OG_KS	    "VD_OG_KS"	                      [ stateTopic="ard_state/VD_OG_KS",	  commandTopic="ard_command/VD_OG_KS"]	
        Type rollershutter : DF_OG_KS	    "DF_OG_KS"	                      [ stateTopic="ard_state/DF_OG_KS",	  commandTopic="ard_command/DF_OG_KS"]	        
    }          
    
}



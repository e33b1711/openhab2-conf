rule HeatingControler
when
	Item balanced_power received update
then

	if(heating_pwm.state == NULL){
		heating_pwm.postUpdate(0);
	}


	var nxt_pwm = heating_pwm.state as Number;
	var bal_pow = balanced_power.state as Number;

	if (bal_pow < -160 && (nxt_pwm < 253)){
		nxt_pwm = nxt_pwm - (bal_pow/15);
		if (nxt_pwm > 253){
			nxt_pow = 253;
		}
	}


	if((bal_pow < -60) && (-160 <= bal_pow) && (nxt_pwm < 253)){
		nxt_pwm = nxt_pwm+1;
	}


	if ((bal_pow > -10) && (-60 <= bal_pow) && (nxt_pwm > 0)){
		nxt_pwm = nxt_pwm -1
	}



	if (bal_pow > 140 && (nxt_pwm > 0)){
		nxt_pwm = nxt_pwm - (bal_pow/15);
		if (nxt_pwm < 0){
			nxt_pwm = 0;
		}
	}
	
	if (heating_enable.state == OFF){
		nxt_pwm = 0;
	}	
	
	heating_pwm.postUpdate(nxt_pwm);
	pwm_out.sendCommand("pwm:" + nxt_pwm.toString() + "\n");
end



rule HeatingControlerInit
when
	System started
then
	heating_pwm.postUpdate(0);
	heating_enable.postUpdate(ON);
end
	
	

rule balancedPowerRule
when 
	Item power_l1 received update
then
	postUpdate(balanced_power, power_l1.state as DecimalType + power_l2.state as DecimalType + power_l3.state as DecimalType)
end






